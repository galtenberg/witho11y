// Code generated by MockGen. DO NOT EDIT.
// Source: ./unreliable_dependency.go
//
// Generated by this command:
//
//	mockgen -source=./unreliable_dependency.go -destination=./mock_unreliable_dependency.go -package=otelmock
//

// Package otelmock is a generated GoMock package.
package otelmock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUnreliableDependency is a mock of UnreliableDependency interface.
type MockUnreliableDependency struct {
	ctrl     *gomock.Controller
	recorder *MockUnreliableDependencyMockRecorder
}

// MockUnreliableDependencyMockRecorder is the mock recorder for MockUnreliableDependency.
type MockUnreliableDependencyMockRecorder struct {
	mock *MockUnreliableDependency
}

// NewMockUnreliableDependency creates a new mock instance.
func NewMockUnreliableDependency(ctrl *gomock.Controller) *MockUnreliableDependency {
	mock := &MockUnreliableDependency{ctrl: ctrl}
	mock.recorder = &MockUnreliableDependencyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnreliableDependency) EXPECT() *MockUnreliableDependencyMockRecorder {
	return m.recorder
}

// CallUnreliableDependency mocks base method.
func (m *MockUnreliableDependency) CallUnreliableDependency(ctx context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CallUnreliableDependency", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CallUnreliableDependency indicates an expected call of CallUnreliableDependency.
func (mr *MockUnreliableDependencyMockRecorder) CallUnreliableDependency(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CallUnreliableDependency", reflect.TypeOf((*MockUnreliableDependency)(nil).CallUnreliableDependency), ctx)
}
